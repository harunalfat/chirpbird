version: '2'

services:
  redis1:
    image: redis:6.2.6-alpine
    command: redis-server --port 6380
    ports:
      - '6380:6380'

  redis2:
    image: redis:6.2.6-alpine
    command: redis-server --slaveof ${HOST_DOCKER_INTERNAL_IP} 6380 --port 6381 --slave-announce-ip ${HOST_DOCKER_INTERNAL_IP}
    depends_on:
      - redis1
    ports:
      - '6381:6381'

  redis3:
    image: redis:6.2.6-alpine
    command: redis-server --slaveof ${HOST_DOCKER_INTERNAL_IP} 6380 --port 6382 --slave-announce-ip ${HOST_DOCKER_INTERNAL_IP}
    depends_on:
      - redis1
    ports:
      - '6382:6382'

  redis-sentinel1:
    image: bitnami/redis-sentinel:6.2
    environment:
      - REDIS_MASTER_HOST=${HOST_DOCKER_INTERNAL_IP}
      - REDIS_MASTER_PORT_NUMBER=6380
      - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=10000
      - REDIS_SENTINEL_FAILOVER_TIMEOUT=5000
      - REDIS_SENTINEL_QUORUM=2
      - REDIS_SENTINEL_PORT_NUMBER=26379
      - REDIS_SENTINEL_ANNOUNCE_IP=${HOST_DOCKER_INTERNAL_IP}
    depends_on:
      - redis1
      - redis2
      - redis3
    ports:
      - '26379:26379'

  redis-sentinel2:
    image: bitnami/redis-sentinel:6.2
    environment:
      - REDIS_MASTER_HOST=${HOST_DOCKER_INTERNAL_IP}
      - REDIS_MASTER_PORT_NUMBER=6380
      - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=10000
      - REDIS_SENTINEL_FAILOVER_TIMEOUT=5000
      - REDIS_SENTINEL_QUORUM=2
      - REDIS_SENTINEL_PORT_NUMBER=26380
      - REDIS_SENTINEL_ANNOUNCE_IP=${HOST_DOCKER_INTERNAL_IP}
    depends_on:
      - redis1
      - redis2
      - redis3
    ports:
      - '26380:26380'

  redis-sentinel3:
    image: bitnami/redis-sentinel:6.2
    environment:
      - REDIS_MASTER_HOST=${HOST_DOCKER_INTERNAL_IP}
      - REDIS_MASTER_PORT_NUMBER=6380
      - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=10000
      - REDIS_SENTINEL_FAILOVER_TIMEOUT=5000
      - REDIS_SENTINEL_QUORUM=2
      - REDIS_SENTINEL_PORT_NUMBER=26381
      - REDIS_SENTINEL_ANNOUNCE_IP=${HOST_DOCKER_INTERNAL_IP}
    depends_on:
      - redis1
      - redis2
      - redis3
    ports:
      - '26381:26381'

  mongodb1:
    image: 'mongo:5.0-focal'
    entrypoint: [ "/usr/bin/mongod", "--port", "27017", "--replSet", "rsmongo", "--bind_ip_all"]

  mongodb2:
    image: 'mongo:5.0-focal'
    entrypoint: [ "/usr/bin/mongod", "--port", "27017", "--replSet", "rsmongo", "--bind_ip_all"]

  mongodb3:
    image: 'mongo:5.0-focal'
    entrypoint: [ "/usr/bin/mongod", "--port", "27017", "--replSet", "rsmongo", "--bind_ip_all"]

  mongodb-configer:
    build: "./mongo-setup"
    depends_on:
      - mongodb1
      - mongodb2
      - mongodb3

  backend1:
    build: ./backend
    environment:
      - PORT=8000
      - REDIS_SENTINEL_ADDRESSES=${HOST_DOCKER_INTERNAL_IP}:26379,${HOST_DOCKER_INTERNAL_IP}:26380,${HOST_DOCKER_INTERNAL_IP}:26381
      - REDIS_MASTER_NAME=mymaster
      - MONGODB_CONN_URI=mongodb://mongodb1:27017,mongodb://mongodb2:27018,mongodb://mongodb3:27019
    depends_on:
      - redis-sentinel1
      - redis-sentinel2
      - redis-sentinel3
      - mongodb-configer

  backend2:
    build: ./backend
    environment:
      - PORT=8000
      - REDIS_SENTINEL_ADDRESSES=${HOST_DOCKER_INTERNAL_IP}:26379,${HOST_DOCKER_INTERNAL_IP}:26380,${HOST_DOCKER_INTERNAL_IP}:26381
      - REDIS_MASTER_NAME=mymaster
      - MONGODB_CONN_URI=mongodb://mongodb1:27017,mongodb://mongodb2:27018,mongodb://mongodb3:27019
    depends_on:
      - redis-sentinel1
      - redis-sentinel2
      - redis-sentinel3
      - mongodb-configer

  backend3:
    build: ./backend
    environment:
      - PORT=8000
      - REDIS_SENTINEL_ADDRESSES=${HOST_DOCKER_INTERNAL_IP}:26379,${HOST_DOCKER_INTERNAL_IP}:26380,${HOST_DOCKER_INTERNAL_IP}:26381
      - REDIS_MASTER_NAME=mymaster
      - MONGODB_CONN_URI=mongodb://mongodb1:27017,mongodb://mongodb2:27018,mongodb://mongodb3:27019
    depends_on:
      - redis-sentinel1
      - redis-sentinel2
      - redis-sentinel3
      - mongodb-configer

  load-balancer:
    build: ./load-balancer
    depends_on:
      - backend1
      - backend2
      - backend3
    ports:
      - '8000:80'

  statics:
    build: ./frontend
    depends_on:
      - load-balancer
    ports:
      - '4000:80'
